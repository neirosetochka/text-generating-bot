import telebot
from telebot import types
from model_wrapper import ModelWrapper
import re

bot = telebot.TeleBot('6815921534:AAGKT_yQydCGTToUn9DTOidxDoV40blPbxE')
model_wrapper = ModelWrapper()
past_text = None

@bot.message_handler(commands=['start'])
def start(message):     
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    btn = types.KeyboardButton('–†–∞–∑–±—É–¥–∏—Ç—å –º–µ–Ω—èüêß')
    markup.add(btn)
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –õ–∏—Å–∞ (—É–¥–∞—Ä–µ–Ω–∏–µ, –∫—Å—Ç–∞—Ç–∏, –Ω–∞ ¬´–∏¬ª), LM-–º–æ–¥–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ n-gram –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ ‚úåüòáüò∫. –Ø –ø–æ–∫–∞ –µ—â–µ —Å–ø–ª—é üò¥", reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    help_message = """–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.
/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
/params - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
/repeat - –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (—á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
temperature = value - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É = value
"""
    bot.send_message(message.from_user.id, help_message)

def bot_generate(message, text):

    if not model_wrapper.model.tokenizer.text_preprocess(text):
            bot.send_message(message.from_user.id, '–ù—É–∂–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä—É—Å—Å–∫–∏–π —Å–∏–º–≤–æ–ªüíî')

    else:
        status, result = model_wrapper.generate(text)
        if status:
            bot.send_message(message.from_user.id, result)
        else:
            bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏üò±')


@bot.message_handler(commands=['repeat'])
def repeat(message):
    if past_text is None:
        bot.send_message(message.from_user.id, '–ú–Ω–µ –ø–æ–∫–∞ –Ω–µ—á–µ–≥–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å.')
    else:
        bot_generate(message, past_text)

@bot.message_handler(commands=['params'])
def params(message):
    config = model_wrapper.generate_kwargs['generation_config']
    temperature = config.temperature
    sample_top_p = config.sample_top_p
    bot.send_message(message.from_user.id, 'temperature = ' + str(temperature) + ', sample_top_p =' + str(sample_top_p) + '.')
        
@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    
    if message.text == '–†–∞–∑–±—É–¥–∏—Ç—å –º–µ–Ω—èüêß':

        status = model_wrapper.load('StatLM')
        if status:
            bot_message = "–Ø –ø—Ä–æ—Å–Ω—É–ª–∞—Å—å üíÉüé∂üíÉ"
            s1 = ".\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (temperature/sample_top_p), –Ω–∞–ø–∏—à–∏ —Ç–∞–∫: ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–∞—Ä–∞–º–µ—Ç—Ä–∞ = –∑–Ω–∞—á–µ–Ω–∏–µ¬ªüçí.\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–∞–ø–∏—à–∏ /params."
            s2 = '\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ—à–ª—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, –Ω–∞–ø–∏—à–∏ /repeat.'
            bot_message += s1 + s2
            bot.send_message(message.from_user.id, bot_message)
        else:
            bot.send_message(message.from_user.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ö–æ—á—É –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è, —Ç–∞–∫–∏–µ —Å–Ω—ã –ø—Ä–∏—è—Ç–Ω—ã–µ... üò≠üò≠üò≠")   
    
    elif 'temperature' in message.text or 'sample_top_p' in message.text:
        value = message.text.split()[2]
        success = False
        if re.match(r'\d+.\d+', value):
            value = float(value)
            success = True
        elif re.match(r'\d+,\d+', value):
            value = float(value.replace(',', '.'))
            success = True
        elif re.match(r'\d+(.\d+){0,1}e-{0,1}\d+', value):
            v0, v1 = [float(x) for x in value.split('e')]
            value = v0 * 10 ** v1
            success = True
        
        if success:
            result = model_wrapper.change_kwargs(value, message.text.split()[0])
            if result:
                bot.send_message(message.from_user.id, "–ó–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æüòá")
            else:
                bot.send_message(message.from_user.id, "–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Äüò•")
        else:
            bot.send_message(message.from_user.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üòî")

    else:
        past_text = message.text + '\n##'
        bot_generate(message, message.text)
        
bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
